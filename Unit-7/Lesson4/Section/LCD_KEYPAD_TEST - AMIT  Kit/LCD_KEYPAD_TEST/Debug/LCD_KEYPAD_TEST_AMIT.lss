
LCD_KEYPAD_TEST_AMIT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004de  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  000004de  00000552  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000570  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  000005dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000136e  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078f  00000000  00000000  00001a32  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000989  00000000  00000000  000021c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001bc  00000000  00000000  00002b4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000059e  00000000  00000000  00002d08  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000bed  00000000  00000000  000032a6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00003e93  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ed       	ldi	r30, 0xDE	; 222
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 3b 02 	call	0x476	; 0x476 <main>
  7a:	0c 94 6d 02 	jmp	0x4da	; 0x4da <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_SetPinDirection>:
/* MCAL */
#include "DIO_INTERFACE.h"
/* Pin Apis */
void DIO_SetPinDirection(u8 PortId,u8 PinId,u8 PinDirection )
{
	if((PortId<=3) && (PinId<=7) && ((PinDirection==DIO_PIN_OUTPUT) || (PinDirection==DIO_PIN_INPUT)))
  82:	84 30       	cpi	r24, 0x04	; 4
  84:	08 f0       	brcs	.+2      	; 0x88 <DIO_SetPinDirection+0x6>
  86:	72 c0       	rjmp	.+228    	; 0x16c <DIO_SetPinDirection+0xea>
  88:	68 30       	cpi	r22, 0x08	; 8
  8a:	08 f0       	brcs	.+2      	; 0x8e <DIO_SetPinDirection+0xc>
  8c:	6f c0       	rjmp	.+222    	; 0x16c <DIO_SetPinDirection+0xea>
  8e:	42 30       	cpi	r20, 0x02	; 2
  90:	08 f0       	brcs	.+2      	; 0x94 <DIO_SetPinDirection+0x12>
  92:	6c c0       	rjmp	.+216    	; 0x16c <DIO_SetPinDirection+0xea>
	{
	switch(PortId)
  94:	81 30       	cpi	r24, 0x01	; 1
  96:	01 f1       	breq	.+64     	; 0xd8 <DIO_SetPinDirection+0x56>
  98:	30 f0       	brcs	.+12     	; 0xa6 <DIO_SetPinDirection+0x24>
  9a:	82 30       	cpi	r24, 0x02	; 2
  9c:	b1 f1       	breq	.+108    	; 0x10a <DIO_SetPinDirection+0x88>
  9e:	83 30       	cpi	r24, 0x03	; 3
  a0:	09 f4       	brne	.+2      	; 0xa4 <DIO_SetPinDirection+0x22>
  a2:	4c c0       	rjmp	.+152    	; 0x13c <DIO_SetPinDirection+0xba>
  a4:	08 95       	ret
	{
		case 0: // DIO_PORTA
		if (DIO_PIN_OUTPUT==PinDirection)
  a6:	41 30       	cpi	r20, 0x01	; 1
  a8:	59 f4       	brne	.+22     	; 0xc0 <DIO_SetPinDirection+0x3e>
		{
			SET(DDRA,PinId);
  aa:	2a b3       	in	r18, 0x1a	; 26
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <DIO_SetPinDirection+0x34>
  b2:	88 0f       	add	r24, r24
  b4:	99 1f       	adc	r25, r25
  b6:	6a 95       	dec	r22
  b8:	e2 f7       	brpl	.-8      	; 0xb2 <DIO_SetPinDirection+0x30>
  ba:	82 2b       	or	r24, r18
  bc:	8a bb       	out	0x1a, r24	; 26
  be:	08 95       	ret
		}
		else 
		{
			RESET(DDRA,PinId);
  c0:	2a b3       	in	r18, 0x1a	; 26
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	02 c0       	rjmp	.+4      	; 0xcc <DIO_SetPinDirection+0x4a>
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	6a 95       	dec	r22
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <DIO_SetPinDirection+0x46>
  d0:	80 95       	com	r24
  d2:	82 23       	and	r24, r18
  d4:	8a bb       	out	0x1a, r24	; 26
  d6:	08 95       	ret
		}
		break;
		
		case 1: // DIO_PORTB
		if (DIO_PIN_OUTPUT==PinDirection)
  d8:	41 30       	cpi	r20, 0x01	; 1
  da:	59 f4       	brne	.+22     	; 0xf2 <DIO_SetPinDirection+0x70>
		{
			SET(DDRB,PinId);
  dc:	27 b3       	in	r18, 0x17	; 23
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_SetPinDirection+0x66>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_SetPinDirection+0x62>
  ec:	82 2b       	or	r24, r18
  ee:	87 bb       	out	0x17, r24	; 23
  f0:	08 95       	ret
		}
		else
		{
			RESET(DDRB,PinId);
  f2:	27 b3       	in	r18, 0x17	; 23
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_SetPinDirection+0x7c>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_SetPinDirection+0x78>
 102:	80 95       	com	r24
 104:	82 23       	and	r24, r18
 106:	87 bb       	out	0x17, r24	; 23
 108:	08 95       	ret
		}
		break;
		
		case 2: // DIO_PORTC
		if (DIO_PIN_OUTPUT==PinDirection)
 10a:	41 30       	cpi	r20, 0x01	; 1
 10c:	59 f4       	brne	.+22     	; 0x124 <DIO_SetPinDirection+0xa2>
		{
			SET(DDRC,PinId);
 10e:	24 b3       	in	r18, 0x14	; 20
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_SetPinDirection+0x98>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	6a 95       	dec	r22
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_SetPinDirection+0x94>
 11e:	82 2b       	or	r24, r18
 120:	84 bb       	out	0x14, r24	; 20
 122:	08 95       	ret
		}
		else
		{
			RESET(DDRC,PinId);
 124:	24 b3       	in	r18, 0x14	; 20
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_SetPinDirection+0xae>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_SetPinDirection+0xaa>
 134:	80 95       	com	r24
 136:	82 23       	and	r24, r18
 138:	84 bb       	out	0x14, r24	; 20
 13a:	08 95       	ret
		}
		break;
		
		case 3: // DIO_PORTD
		if (DIO_PIN_OUTPUT==PinDirection)
 13c:	41 30       	cpi	r20, 0x01	; 1
 13e:	59 f4       	brne	.+22     	; 0x156 <DIO_SetPinDirection+0xd4>
		{
			SET(DDRD,PinId);
 140:	21 b3       	in	r18, 0x11	; 17
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 c0       	rjmp	.+4      	; 0x14c <DIO_SetPinDirection+0xca>
 148:	88 0f       	add	r24, r24
 14a:	99 1f       	adc	r25, r25
 14c:	6a 95       	dec	r22
 14e:	e2 f7       	brpl	.-8      	; 0x148 <DIO_SetPinDirection+0xc6>
 150:	82 2b       	or	r24, r18
 152:	81 bb       	out	0x11, r24	; 17
 154:	08 95       	ret
		}
		else
		{
			RESET(DDRD,PinId);
 156:	21 b3       	in	r18, 0x11	; 17
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	02 c0       	rjmp	.+4      	; 0x162 <DIO_SetPinDirection+0xe0>
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	6a 95       	dec	r22
 164:	e2 f7       	brpl	.-8      	; 0x15e <DIO_SetPinDirection+0xdc>
 166:	80 95       	com	r24
 168:	82 23       	and	r24, r18
 16a:	81 bb       	out	0x11, r24	; 17
 16c:	08 95       	ret

0000016e <DIO_SetPinValue>:
	}
	}
}
void DIO_SetPinValue(u8 PortId,u8 PinId,u8 PinValue)
{
	if ((PortId<=3) && (PinId<=7) && ((PinValue==DIO_PIN_HIGH) || (PinValue==DIO_PIN_LOW) ))
 16e:	84 30       	cpi	r24, 0x04	; 4
 170:	08 f0       	brcs	.+2      	; 0x174 <DIO_SetPinValue+0x6>
 172:	72 c0       	rjmp	.+228    	; 0x258 <DIO_SetPinValue+0xea>
 174:	68 30       	cpi	r22, 0x08	; 8
 176:	08 f0       	brcs	.+2      	; 0x17a <DIO_SetPinValue+0xc>
 178:	6f c0       	rjmp	.+222    	; 0x258 <DIO_SetPinValue+0xea>
 17a:	42 30       	cpi	r20, 0x02	; 2
 17c:	08 f0       	brcs	.+2      	; 0x180 <DIO_SetPinValue+0x12>
 17e:	6c c0       	rjmp	.+216    	; 0x258 <DIO_SetPinValue+0xea>
	{
		switch(PortId)
 180:	81 30       	cpi	r24, 0x01	; 1
 182:	01 f1       	breq	.+64     	; 0x1c4 <DIO_SetPinValue+0x56>
 184:	30 f0       	brcs	.+12     	; 0x192 <DIO_SetPinValue+0x24>
 186:	82 30       	cpi	r24, 0x02	; 2
 188:	b1 f1       	breq	.+108    	; 0x1f6 <DIO_SetPinValue+0x88>
 18a:	83 30       	cpi	r24, 0x03	; 3
 18c:	09 f4       	brne	.+2      	; 0x190 <DIO_SetPinValue+0x22>
 18e:	4c c0       	rjmp	.+152    	; 0x228 <DIO_SetPinValue+0xba>
 190:	08 95       	ret
		{
			case 0: //DIO_PORTA
					if (DIO_PIN_HIGH==PinValue)
 192:	41 30       	cpi	r20, 0x01	; 1
 194:	59 f4       	brne	.+22     	; 0x1ac <DIO_SetPinValue+0x3e>
					{
						SET(PORTA,PinId);
 196:	2b b3       	in	r18, 0x1b	; 27
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_SetPinValue+0x34>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	6a 95       	dec	r22
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_SetPinValue+0x30>
 1a6:	82 2b       	or	r24, r18
 1a8:	8b bb       	out	0x1b, r24	; 27
 1aa:	08 95       	ret
					}	
					else
					RESET(PORTA,PinId);
 1ac:	2b b3       	in	r18, 0x1b	; 27
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <DIO_SetPinValue+0x4a>
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	6a 95       	dec	r22
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <DIO_SetPinValue+0x46>
 1bc:	80 95       	com	r24
 1be:	82 23       	and	r24, r18
 1c0:	8b bb       	out	0x1b, r24	; 27
 1c2:	08 95       	ret
					break;
					
			case 1: //DIO_PORTB
			if (DIO_PIN_HIGH==PinValue)
 1c4:	41 30       	cpi	r20, 0x01	; 1
 1c6:	59 f4       	brne	.+22     	; 0x1de <DIO_SetPinValue+0x70>
			{
				SET(PORTB,PinId);
 1c8:	28 b3       	in	r18, 0x18	; 24
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_SetPinValue+0x66>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_SetPinValue+0x62>
 1d8:	82 2b       	or	r24, r18
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
			}
			else
			RESET(PORTB,PinId);
 1de:	28 b3       	in	r18, 0x18	; 24
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_SetPinValue+0x7c>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	6a 95       	dec	r22
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_SetPinValue+0x78>
 1ee:	80 95       	com	r24
 1f0:	82 23       	and	r24, r18
 1f2:	88 bb       	out	0x18, r24	; 24
 1f4:	08 95       	ret
			break;
			
			case 2: //DIO_PORTC
			if (DIO_PIN_HIGH==PinValue)
 1f6:	41 30       	cpi	r20, 0x01	; 1
 1f8:	59 f4       	brne	.+22     	; 0x210 <DIO_SetPinValue+0xa2>
			{
				SET(PORTC,PinId);
 1fa:	25 b3       	in	r18, 0x15	; 21
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_SetPinValue+0x98>
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	6a 95       	dec	r22
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_SetPinValue+0x94>
 20a:	82 2b       	or	r24, r18
 20c:	85 bb       	out	0x15, r24	; 21
 20e:	08 95       	ret
			}
			else
			RESET(PORTC,PinId);
 210:	25 b3       	in	r18, 0x15	; 21
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_SetPinValue+0xae>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_SetPinValue+0xaa>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	85 bb       	out	0x15, r24	; 21
 226:	08 95       	ret
			break;
			
			case 3: //DIO_PORTD
			if (DIO_PIN_HIGH==PinValue)
 228:	41 30       	cpi	r20, 0x01	; 1
 22a:	59 f4       	brne	.+22     	; 0x242 <DIO_SetPinValue+0xd4>
			{
				SET(PORTD,PinId);
 22c:	22 b3       	in	r18, 0x12	; 18
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 c0       	rjmp	.+4      	; 0x238 <DIO_SetPinValue+0xca>
 234:	88 0f       	add	r24, r24
 236:	99 1f       	adc	r25, r25
 238:	6a 95       	dec	r22
 23a:	e2 f7       	brpl	.-8      	; 0x234 <DIO_SetPinValue+0xc6>
 23c:	82 2b       	or	r24, r18
 23e:	82 bb       	out	0x12, r24	; 18
 240:	08 95       	ret
			}
			else
			RESET(PORTD,PinId);  
 242:	22 b3       	in	r18, 0x12	; 18
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_SetPinValue+0xe0>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_SetPinValue+0xdc>
 252:	80 95       	com	r24
 254:	82 23       	and	r24, r18
 256:	82 bb       	out	0x12, r24	; 18
 258:	08 95       	ret

0000025a <LCD_Write_Half_Port>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25a:	cf 93       	push	r28
 25c:	c8 2f       	mov	r28, r24
 25e:	80 ff       	sbrs	r24, 0
 260:	06 c0       	rjmp	.+12     	; 0x26e <LCD_Write_Half_Port+0x14>
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	64 e0       	ldi	r22, 0x04	; 4
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 26c:	05 c0       	rjmp	.+10     	; 0x278 <LCD_Write_Half_Port+0x1e>
 26e:	40 e0       	ldi	r20, 0x00	; 0
 270:	64 e0       	ldi	r22, 0x04	; 4
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 278:	c1 ff       	sbrs	r28, 1
 27a:	06 c0       	rjmp	.+12     	; 0x288 <LCD_Write_Half_Port+0x2e>
 27c:	41 e0       	ldi	r20, 0x01	; 1
 27e:	65 e0       	ldi	r22, 0x05	; 5
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 286:	05 c0       	rjmp	.+10     	; 0x292 <LCD_Write_Half_Port+0x38>
 288:	40 e0       	ldi	r20, 0x00	; 0
 28a:	65 e0       	ldi	r22, 0x05	; 5
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 292:	c2 ff       	sbrs	r28, 2
 294:	06 c0       	rjmp	.+12     	; 0x2a2 <LCD_Write_Half_Port+0x48>
 296:	41 e0       	ldi	r20, 0x01	; 1
 298:	66 e0       	ldi	r22, 0x06	; 6
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 2a0:	05 c0       	rjmp	.+10     	; 0x2ac <LCD_Write_Half_Port+0x52>
 2a2:	40 e0       	ldi	r20, 0x00	; 0
 2a4:	66 e0       	ldi	r22, 0x06	; 6
 2a6:	80 e0       	ldi	r24, 0x00	; 0
 2a8:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 2ac:	c3 ff       	sbrs	r28, 3
 2ae:	06 c0       	rjmp	.+12     	; 0x2bc <LCD_Write_Half_Port+0x62>
 2b0:	41 e0       	ldi	r20, 0x01	; 1
 2b2:	67 e0       	ldi	r22, 0x07	; 7
 2b4:	80 e0       	ldi	r24, 0x00	; 0
 2b6:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 2ba:	05 c0       	rjmp	.+10     	; 0x2c6 <LCD_Write_Half_Port+0x6c>
 2bc:	40 e0       	ldi	r20, 0x00	; 0
 2be:	67 e0       	ldi	r22, 0x07	; 7
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 2c6:	cf 91       	pop	r28
 2c8:	08 95       	ret

000002ca <LCD_Send_Cmd>:
 2ca:	cf 93       	push	r28
 2cc:	c8 2f       	mov	r28, r24
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	61 e0       	ldi	r22, 0x01	; 1
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	62 e0       	ldi	r22, 0x02	; 2
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 2e2:	8c 2f       	mov	r24, r28
 2e4:	82 95       	swap	r24
 2e6:	8f 70       	andi	r24, 0x0F	; 15
 2e8:	0e 94 2d 01 	call	0x25a	; 0x25a <LCD_Write_Half_Port>
 2ec:	41 e0       	ldi	r20, 0x01	; 1
 2ee:	63 e0       	ldi	r22, 0x03	; 3
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 2f6:	8f e9       	ldi	r24, 0x9F	; 159
 2f8:	9f e0       	ldi	r25, 0x0F	; 15
 2fa:	01 97       	sbiw	r24, 0x01	; 1
 2fc:	f1 f7       	brne	.-4      	; 0x2fa <LCD_Send_Cmd+0x30>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <LCD_Send_Cmd+0x36>
 300:	00 00       	nop
 302:	40 e0       	ldi	r20, 0x00	; 0
 304:	63 e0       	ldi	r22, 0x03	; 3
 306:	81 e0       	ldi	r24, 0x01	; 1
 308:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 30c:	8c 2f       	mov	r24, r28
 30e:	0e 94 2d 01 	call	0x25a	; 0x25a <LCD_Write_Half_Port>
 312:	41 e0       	ldi	r20, 0x01	; 1
 314:	63 e0       	ldi	r22, 0x03	; 3
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 31c:	8f e9       	ldi	r24, 0x9F	; 159
 31e:	9f e0       	ldi	r25, 0x0F	; 15
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	f1 f7       	brne	.-4      	; 0x320 <LCD_Send_Cmd+0x56>
 324:	00 c0       	rjmp	.+0      	; 0x326 <LCD_Send_Cmd+0x5c>
 326:	00 00       	nop
 328:	40 e0       	ldi	r20, 0x00	; 0
 32a:	63 e0       	ldi	r22, 0x03	; 3
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 332:	cf 91       	pop	r28
 334:	08 95       	ret

00000336 <LCD_Init>:
 336:	2f e7       	ldi	r18, 0x7F	; 127
 338:	85 eb       	ldi	r24, 0xB5	; 181
 33a:	91 e0       	ldi	r25, 0x01	; 1
 33c:	21 50       	subi	r18, 0x01	; 1
 33e:	80 40       	sbci	r24, 0x00	; 0
 340:	90 40       	sbci	r25, 0x00	; 0
 342:	e1 f7       	brne	.-8      	; 0x33c <LCD_Init+0x6>
 344:	00 c0       	rjmp	.+0      	; 0x346 <LCD_Init+0x10>
 346:	00 00       	nop
 348:	40 e0       	ldi	r20, 0x00	; 0
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 352:	40 e0       	ldi	r20, 0x00	; 0
 354:	62 e0       	ldi	r22, 0x02	; 2
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 35c:	82 e0       	ldi	r24, 0x02	; 2
 35e:	0e 94 2d 01 	call	0x25a	; 0x25a <LCD_Write_Half_Port>
 362:	41 e0       	ldi	r20, 0x01	; 1
 364:	63 e0       	ldi	r22, 0x03	; 3
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 36c:	8f e9       	ldi	r24, 0x9F	; 159
 36e:	9f e0       	ldi	r25, 0x0F	; 15
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <LCD_Init+0x3a>
 374:	00 c0       	rjmp	.+0      	; 0x376 <LCD_Init+0x40>
 376:	00 00       	nop
 378:	40 e0       	ldi	r20, 0x00	; 0
 37a:	63 e0       	ldi	r22, 0x03	; 3
 37c:	81 e0       	ldi	r24, 0x01	; 1
 37e:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 382:	88 e2       	ldi	r24, 0x28	; 40
 384:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_Send_Cmd>
 388:	90 ef       	ldi	r25, 0xF0	; 240
 38a:	9a 95       	dec	r25
 38c:	f1 f7       	brne	.-4      	; 0x38a <LCD_Init+0x54>
 38e:	8c e0       	ldi	r24, 0x0C	; 12
 390:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_Send_Cmd>
 394:	20 ef       	ldi	r18, 0xF0	; 240
 396:	2a 95       	dec	r18
 398:	f1 f7       	brne	.-4      	; 0x396 <LCD_Init+0x60>
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_Send_Cmd>
 3a0:	8f ef       	ldi	r24, 0xFF	; 255
 3a2:	98 e1       	ldi	r25, 0x18	; 24
 3a4:	01 97       	sbiw	r24, 0x01	; 1
 3a6:	f1 f7       	brne	.-4      	; 0x3a4 <LCD_Init+0x6e>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <LCD_Init+0x74>
 3aa:	00 00       	nop
 3ac:	86 e0       	ldi	r24, 0x06	; 6
 3ae:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_Send_Cmd>
 3b2:	08 95       	ret

000003b4 <LCD_Send_Char>:
 3b4:	cf 93       	push	r28
 3b6:	c8 2f       	mov	r28, r24
 3b8:	41 e0       	ldi	r20, 0x01	; 1
 3ba:	61 e0       	ldi	r22, 0x01	; 1
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	62 e0       	ldi	r22, 0x02	; 2
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 3cc:	8c 2f       	mov	r24, r28
 3ce:	82 95       	swap	r24
 3d0:	8f 70       	andi	r24, 0x0F	; 15
 3d2:	0e 94 2d 01 	call	0x25a	; 0x25a <LCD_Write_Half_Port>
 3d6:	41 e0       	ldi	r20, 0x01	; 1
 3d8:	63 e0       	ldi	r22, 0x03	; 3
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 3e0:	8f e9       	ldi	r24, 0x9F	; 159
 3e2:	9f e0       	ldi	r25, 0x0F	; 15
 3e4:	01 97       	sbiw	r24, 0x01	; 1
 3e6:	f1 f7       	brne	.-4      	; 0x3e4 <LCD_Send_Char+0x30>
 3e8:	00 c0       	rjmp	.+0      	; 0x3ea <LCD_Send_Char+0x36>
 3ea:	00 00       	nop
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	63 e0       	ldi	r22, 0x03	; 3
 3f0:	81 e0       	ldi	r24, 0x01	; 1
 3f2:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 3f6:	8c 2f       	mov	r24, r28
 3f8:	0e 94 2d 01 	call	0x25a	; 0x25a <LCD_Write_Half_Port>
 3fc:	41 e0       	ldi	r20, 0x01	; 1
 3fe:	63 e0       	ldi	r22, 0x03	; 3
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 406:	8f e9       	ldi	r24, 0x9F	; 159
 408:	9f e0       	ldi	r25, 0x0F	; 15
 40a:	01 97       	sbiw	r24, 0x01	; 1
 40c:	f1 f7       	brne	.-4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 40e:	00 c0       	rjmp	.+0      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 410:	00 00       	nop
 412:	40 e0       	ldi	r20, 0x00	; 0
 414:	63 e0       	ldi	r22, 0x03	; 3
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	0e 94 b7 00 	call	0x16e	; 0x16e <DIO_SetPinValue>
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

00000420 <LCD_Send_string>:
 420:	0f 93       	push	r16
 422:	1f 93       	push	r17
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	00 97       	sbiw	r24, 0x00	; 0
 42a:	29 f4       	brne	.+10     	; 0x436 <LCD_Send_string+0x16>
 42c:	0d c0       	rjmp	.+26     	; 0x448 <LCD_Send_string+0x28>
 42e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LCD_Send_Char>
 432:	21 96       	adiw	r28, 0x01	; 1
 434:	03 c0       	rjmp	.+6      	; 0x43c <LCD_Send_string+0x1c>
 436:	8c 01       	movw	r16, r24
 438:	c0 e0       	ldi	r28, 0x00	; 0
 43a:	d0 e0       	ldi	r29, 0x00	; 0
 43c:	f8 01       	movw	r30, r16
 43e:	ec 0f       	add	r30, r28
 440:	fd 1f       	adc	r31, r29
 442:	80 81       	ld	r24, Z
 444:	81 11       	cpse	r24, r1
 446:	f3 cf       	rjmp	.-26     	; 0x42e <LCD_Send_string+0xe>
 448:	df 91       	pop	r29
 44a:	cf 91       	pop	r28
 44c:	1f 91       	pop	r17
 44e:	0f 91       	pop	r16
 450:	08 95       	ret

00000452 <LCD_goToSpecificPosition>:
 452:	81 11       	cpse	r24, r1
 454:	07 c0       	rjmp	.+14     	; 0x464 <LCD_goToSpecificPosition+0x12>
 456:	60 31       	cpi	r22, 0x10	; 16
 458:	68 f4       	brcc	.+26     	; 0x474 <LCD_goToSpecificPosition+0x22>
 45a:	80 e8       	ldi	r24, 0x80	; 128
 45c:	86 0f       	add	r24, r22
 45e:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_Send_Cmd>
 462:	08 95       	ret
 464:	81 30       	cpi	r24, 0x01	; 1
 466:	31 f4       	brne	.+12     	; 0x474 <LCD_goToSpecificPosition+0x22>
 468:	60 31       	cpi	r22, 0x10	; 16
 46a:	20 f4       	brcc	.+8      	; 0x474 <LCD_goToSpecificPosition+0x22>
 46c:	80 ec       	ldi	r24, 0xC0	; 192
 46e:	86 0f       	add	r24, r22
 470:	0e 94 65 01 	call	0x2ca	; 0x2ca <LCD_Send_Cmd>
 474:	08 95       	ret

00000476 <main>:


int main(void)
{
	//lcd pins 
	DIO_SetPinDirection(DIO_PORTA,DIO_PIN4,DIO_PIN_OUTPUT);//data lcd
 476:	41 e0       	ldi	r20, 0x01	; 1
 478:	64 e0       	ldi	r22, 0x04	; 4
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTA,DIO_PIN5,DIO_PIN_OUTPUT);//data lcd
 480:	41 e0       	ldi	r20, 0x01	; 1
 482:	65 e0       	ldi	r22, 0x05	; 5
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTA,DIO_PIN6,DIO_PIN_OUTPUT);//data lcd
 48a:	41 e0       	ldi	r20, 0x01	; 1
 48c:	66 e0       	ldi	r22, 0x06	; 6
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTA,DIO_PIN7,DIO_PIN_OUTPUT);//data lcd
 494:	41 e0       	ldi	r20, 0x01	; 1
 496:	67 e0       	ldi	r22, 0x07	; 7
 498:	80 e0       	ldi	r24, 0x00	; 0
 49a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTB,DIO_PIN1,DIO_PIN_OUTPUT);// lcd RS
 49e:	41 e0       	ldi	r20, 0x01	; 1
 4a0:	61 e0       	ldi	r22, 0x01	; 1
 4a2:	81 e0       	ldi	r24, 0x01	; 1
 4a4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTB,DIO_PIN2,DIO_PIN_OUTPUT);// lcd RW
 4a8:	41 e0       	ldi	r20, 0x01	; 1
 4aa:	62 e0       	ldi	r22, 0x02	; 2
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTB,DIO_PIN3,DIO_PIN_OUTPUT);// lcd EN
 4b2:	41 e0       	ldi	r20, 0x01	; 1
 4b4:	63 e0       	ldi	r22, 0x03	; 3
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDirection>

	LCD_Init();
 4bc:	0e 94 9b 01 	call	0x336	; 0x336 <LCD_Init>
	LCD_Send_string("Learn In Depth");
 4c0:	80 e6       	ldi	r24, 0x60	; 96
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0e 94 10 02 	call	0x420	; 0x420 <LCD_Send_string>
	LCD_goToSpecificPosition(1,0);
 4c8:	60 e0       	ldi	r22, 0x00	; 0
 4ca:	81 e0       	ldi	r24, 0x01	; 1
 4cc:	0e 94 29 02 	call	0x452	; 0x452 <LCD_goToSpecificPosition>
	LCD_Send_string("Made By Ahmed");
 4d0:	8f e6       	ldi	r24, 0x6F	; 111
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	0e 94 10 02 	call	0x420	; 0x420 <LCD_Send_string>
 4d8:	ff cf       	rjmp	.-2      	; 0x4d8 <main+0x62>

000004da <_exit>:
 4da:	f8 94       	cli

000004dc <__stop_program>:
 4dc:	ff cf       	rjmp	.-2      	; 0x4dc <__stop_program>
